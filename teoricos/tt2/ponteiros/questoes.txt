1)

int [] vet : Esse trexo de código diz que foi reclarada uma variável vet do tipo inteiro de ponteiros.

= new int [5] : Esse trecho diz que uma variável do tipo ponteiro está apontando (ou reservando) para um espaço de memória do tamanho 5.

int[] vet = new int[5] : Nesse trecho está declarando a variável vet e apontando para os espaços da memória

2)

public static void main (String[] args) {
	int[] vet = new int[5];
	escrever(vet); // Irá mostrar a posição de memória que o vetor aponta, onde foi alocado o espaço de 5
	
	vet = new int[5];
	escrever(vet); // Irá mostrar outra posição de memória diferente onde foram alocadas 5 espaços.
}

3)

class Ponteiro02PassemTipoPrimitivo {                          Quadro de memória
                                                               ____________		      ___________
	                                                       | Memória   |               | Tela    |
	public static void passagemDeTipoPrimitivo(int a) {    |___________|		      |_________|   	      
		escrever("a: "+ a);				 |X :  5     |75h	      |5        |	                 
		a = 10;					 |___________|  	      |_________|
		escrever("a: "+ a);				 |A :  10    |76h            |5        |
	}                                                      |___________|    ENDEREÇOS  |_________|
	 						 	 |           |77h            |10       |
	public static void main(String[] args) {               |___________|               |_________|
		int x = 5; // x->75h				 |           |78h            |5        | 
		escrever("x: " + x);				 |___________|               |_________|
		passagemDeTipoPrimitivo(x);			 |           |79h
		escrever("x: " + x);				 |___________|
	}
}

4)

class Ponteiro03PassagemArray {

	public static void passagemDeArray(int[] b) {
		for(int i = 0; i < 5; i++) {
			b[i] *= 5; escrever("b[" + i + "]: " + b[i]);	
		}
		b = new int[5];
		for(int i = 0; i < 5; i++) {
			b[i] = i; escrever("b[" + i + "]: " + b[i]);
		}
	}
	public static void main (Strin[] args) {
		int[] y = new int[5];
		for(int i = 0; i < 5; i++) {
			escrever("y[" + i + "]: " + y[i]);
		}
	}
}

_________________                 _______________
|   MEMÓRIA     |                 |  TELA       |
|_______________|                 |_____________|
|Y : 7E         |7A               |y[0] : 0     |
|_______________|                 |_____________|
|B : 8D         |7B               |y[1] : 1     | 
|_______________|                 |_____________|
|               |7C               |y[2] : 2     |
|_______________|                 |_____________| 
|               |7D               |y[3] : 3     | 
|_______________|                 |_____________|
|0              |7E               |y[4] : 4     |
|_______________|                 |_____________|
|5              |7F               |b[0] : 0     |
|_______________|                 |_____________|
|10             |8A               |b[1] : 5     |
|_______________|                 |_____________|
|15             |8B               |b[2] : 10    |
|_______________|                 |_____________|
|20             |8C               |b[3] : 15    |
|_______________|                 |_____________|
|0              |8D               |b[4] : 20    | 
|_______________|                 |_____________|
|1              |8E               |b[0] : 0     |
|_______________|                 |_____________|
|2              |8F               |b[1] : 1     | 
|_______________|                 |_____________|
|3              |9A               |b[2] : 2     |  
|_______________|                 |_____________|
|4              |9B               |b[3] : 3     | 
|_______________|                 |_____________|
                                  |b[4] : 4     |
                                  |_____________|

5)

Cliente c : Está criando um ponteiro c do tipo Cliente 

= new Cliente() : Está realizando uma instância de cliente - criando um objeto - , chamando a classe construtora.

Cliente c = new Cliente () : cria um ponteiro c de cliente e instância, criando um objeto com o construtor padrão da classe Cliente.

6) Quadro de memória

_________________                 _______________
|   MEMÓRIA     |                 |  TELA       |
|_______________|                 |_____________|
|c1 : 7D        |7A               |null         |
|_______________|                 |_____________|
|c2 : 7D        |7B               |null         | 
|_______________|                 |_____________|
|c3 : 7E        |7C               |null         |
|_______________|                 |_____________| 
|3 / "aa"       |7D               |c1(7D)       | 
|_______________|                 |_____________|
|2 / "bb"       |7E               |c2(7D)       |
|_______________|                 |_____________|
|               |7F               |c1(3/aa)     |
|_______________|                 |_____________|
|               |8A               |c2(3/aa)     |
|_______________|                 |_____________|
|               |8B               |c3(2/bb)     |
|_______________|                 |_____________|
                                                                         
7) Quadro de memória

_________________                                  
|   MEMÓRIA     |                                
|_______________|                                   
|c1: 7E         |7A                                
|_______________|                                   
|c2: 7E         |7B                                   
|_______________|                                      
|c3: 7E         |7C                              
|_______________|                                                
|               |7D                                     
|_______________|                                    
|6/"ff"         |7E                                 
|_______________|                                       
|2/"bb"         |7F                               
|_______________|                                    
|               |8A                                     
|_______________|                                    
|               |8B                               
|_______________|                                       
|               |8C                                  
|_______________|                                     
|5/"ee"         |8D                                    
|_______________|                                         
|x : 8D         |8E                                    
|_______________|                                      
|y : 7E         |8F                                    
|_______________|                                       
|3              |9A                                                   
|_______________|                                 
|4              |9B                                 
|_______________|                                 
                                                   
8)

Poderiamos criar um método que clona os dados de c1 para asism atribuir a c2 da seguinte forma:

Cliente c2 = c1.clone();                               

No metodo clone teríamos :

public CLiente clone() {
	return new Cliente(this.codigo, this.nome);
}

9)

class X {
	public static void main (String[] args) {
		Hora h1 = new Hora(12, 30, 30);
		Hora h2 = new Hora(12, 30, 30);
		if (h1 == h2)
			System.out.println("Identicos!");
		else
			System.out.println("Diferentes");
	}
}

B) Escreve na tela "Diferentes". Pois está comparando endereços de memória nessa caso, e não o conteúdo.

10)

A)I e II
III - O atributo pode ser também protectec ou public, e ter um método para setar ele, sem problemas
IV - O atributo não necessariamente tem que ser estático.
